---
export interface Props {
  variant?: 'default' | 'elevated' | 'glass' | 'gradient';
  size?: 'sm' | 'md' | 'lg' | 'xl';
  href?: string;
  class?: string;
}

const { 
  variant = 'default', 
  size = 'md', 
  href,
  class: className = '',
  ...rest 
} = Astro.props;

const baseClass = 'card';
const variantClass = `card-${variant}`;
const sizeClass = `card-${size}`;
const classes = [baseClass, variantClass, sizeClass, className].filter(Boolean).join(' ');

const Tag = href ? 'a' : 'div';
---

<Tag class={classes} href={href} {...rest}>
  <slot />
</Tag>

<style>
  /* ==========================================================================
     CARD COMPONENT
     ========================================================================== */

  .card {
    display: flex;
    flex-direction: column;
    background: var(--color-white);
    border-radius: var(--radius-xl);
    overflow: hidden;
    transition: all var(--transition-medium);
    position: relative;
  }

  /* Size Variants */
  .card-sm {
    padding: var(--space-4);
    gap: var(--space-3);
  }

  .card-md {
    padding: var(--space-6);
    gap: var(--space-4);
  }

  .card-lg {
    padding: var(--space-8);
    gap: var(--space-6);
  }

  .card-xl {
    padding: var(--space-10);
    gap: var(--space-8);
  }

  /* Variant Styles */
  .card-default {
    border: 1px solid var(--color-gray-border);
    box-shadow: var(--shadow-sm);
  }

  .card-default:hover {
    box-shadow: var(--shadow-md);
    transform: translateY(-2px);
  }

  .card-elevated {
    border: none;
    box-shadow: var(--shadow-lg);
  }

  .card-elevated:hover {
    box-shadow: var(--shadow-xl);
    transform: translateY(-4px);
  }

  .card-glass {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: var(--shadow-md);
  }

  .card-glass:hover {
    background: rgba(255, 255, 255, 0.15);
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
  }

  .card-gradient {
    background: var(--gradient-primary);
    color: var(--color-white);
    border: none;
    box-shadow: var(--shadow-lg);
  }

  .card-gradient:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-xl);
  }

  /* Card Header */
  .card-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--space-4);
  }

  .card-title {
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    color: inherit;
    margin: 0;
  }

  .card-subtitle {
    font-size: var(--font-size-sm);
    color: var(--color-text-muted);
    margin: var(--space-1) 0 0 0;
  }

  /* Card Body */
  .card-body {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: var(--space-4);
  }

  .card-content {
    line-height: var(--line-height-base);
    color: inherit;
  }

  /* Card Footer */
  .card-footer {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: var(--space-4);
    margin-top: auto;
    padding-top: var(--space-4);
    border-top: 1px solid var(--color-gray-border);
  }

  /* Card Actions */
  .card-actions {
    display: flex;
    align-items: center;
    gap: var(--space-2);
  }

  /* Card Image */
  .card-image {
    width: 100%;
    height: auto;
    object-fit: cover;
    border-radius: var(--radius-lg);
  }

  .card-image-container {
    position: relative;
    overflow: hidden;
    border-radius: var(--radius-lg);
  }

  /* Interactive States */
  .card[href]:hover {
    cursor: pointer;
  }

  /* Focus States */
  .card:focus-within {
    outline: none;
    box-shadow: 0 0 0 3px var(--color-primary-highlight);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .card-lg {
      padding: var(--space-6);
      gap: var(--space-4);
    }

    .card-xl {
      padding: var(--space-8);
      gap: var(--space-6);
    }

    .card-header {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-2);
    }

    .card-footer {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-3);
    }
  }

  /* Dark Mode Support */
  @media (prefers-color-scheme: dark) {
    .card-default {
      background: var(--color-background-dark);
      border-color: var(--color-border-dark);
    }

    .card-glass {
      background: rgba(255, 255, 255, 0.05);
      border-color: rgba(255, 255, 255, 0.1);
    }
  }
</style> 